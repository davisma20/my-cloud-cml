#!/bin/bash
# Script to build CML 2.8.1 AMI using Packer
set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
cd "$SCRIPT_DIR"

# --- Log Configuration ---
LOG_DIR="$SCRIPT_DIR/../logs"
mkdir -p "$LOG_DIR"
LATEST_LOG_FILE="$LOG_DIR/packer_build_latest.log"
TIMESTAMPED_LOG_FILE="$LOG_DIR/packer_build_$(date +%Y%m%d_%H%M%S).log"

# Archive previous latest log if it exists
if [ -f "$LATEST_LOG_FILE" ]; then
    echo "Archiving previous log to $TIMESTAMPED_LOG_FILE"
    mv "$LATEST_LOG_FILE" "$TIMESTAMPED_LOG_FILE"
fi

echo "Starting Packer build for CML 2.8.1... Log: $LATEST_LOG_FILE"

# Execute Packer build, logging output
packer build cml2.8.1-aws.pkr.hcl 2>&1 | tee "$LATEST_LOG_FILE"

BUILD_STATUS=${PIPESTATUS[0]}
if [ $BUILD_STATUS -eq 0 ]; then
  echo "Packer build completed successfully. Log: $LATEST_LOG_FILE"

  # --- Manifest processing ---
  echo "Processing manifest to update Terraform vars..."
  MANIFEST_FILE="packer-manifest.json"
  TFVARS_FILE="../network_validated_ami.auto.tfvars"

  if ! command -v jq &> /dev/null; then
      echo "Error: jq is not installed. Please install jq to process the manifest."
      exit 1
  fi

  if [ ! -f "$MANIFEST_FILE" ]; then
      echo "Error: Packer manifest file '$MANIFEST_FILE' not found."
      exit 1
  fi

  AMI_ID=$(jq -r '.builds[-1].artifact_id' "$MANIFEST_FILE" | cut -d':' -f2)

  if [ -z "$AMI_ID" ] || [[ ! "$AMI_ID" == ami-* ]]; then
     echo "Error: Could not extract valid AMI ID from '$MANIFEST_FILE'"
     exit 1
  fi

  echo "Writing AMI ID $AMI_ID to $TFVARS_FILE..."
  cat > "$TFVARS_FILE" << EOF
# Terraform variables automatically generated by Packer post-processor
# DO NOT EDIT MANUALLY - This file is overwritten by the Packer build process.

cml_ami = "$AMI_ID"
EOF
  # --- End manifest processing ---
else
  echo "Packer build failed with status ${BUILD_STATUS}. Log: $LATEST_LOG_FILE"
  exit $BUILD_STATUS
fi
